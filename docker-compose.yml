services:
  app:
    build:
      context: .
      args:
        REQUIREMENTS_FILE: "requirements.txt"
    command: python /app/manage.py runserver 0.0.0.0:8000
    env_file: .env
    tty: true
    ports:
      - "8000:8000"
    volumes:
      - ./:/app/
    depends_on:
      # https://docs.docker.com/compose/how-tos/startup-order/#control-startup
      db:
        condition: service_healthy
        restart: true

  db:
    # TODO:
    #  Use the postgis/postgis image when it has ARM support
    #  https://github.com/postgis/docker-postgis/issues/216
    # image: postgis/postgis:17-3.5
    image: kartoza/postgis:17-3.5
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 1s
      retries: 10
      timeout: 10s

volumes:
  db:
